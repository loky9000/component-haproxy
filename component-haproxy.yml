#### Haproxy Load Balancer ####
application:
# Input Configuration parameters.
# In this section you can set input configuration parameters which you
# will be able to change later in reconfiguration
  configuration:
    input.operating-system: {image: "us-east-1/ami-1ba18d72", identity: ec2-user} # image/identity pair for describing Operating system.
    input.stats-user: admin # Haproxy Statistics page User
    input.stats-pass: pa55w0rd # Haproxy Statistics page User Password
    input.stats-port: 1926 # Haproxy Statistics page port
    input.stats-url: /admin?stats # Haproxy Statistics page Url
    input.instance-size: "m1.small" # EC2 Instance type
    input.recipe-url: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-haproxy-cookbooks-stable-a9f11a1.tar.gz" # Chef Cookbooks Url

# Application Interfaces binding section.
# Here we describe a interfaces with pins  and their bindings on  component's  interfaces.
# For binding using function bind(Component1#interface.pin, Component2#interface.pin)
  interfaces:
    input:
      operating-system: "bind(workflow#input.operating-system)"
      stats-user: "bind(workflow#input.stats-user)"
      stats-pass: "bind(workflow#input.stats-pass)"
      stats-port: "bind(workflow#input.stats-port)"
      stats-url: "bind(workflow#input.stats-url)"
      instance-size: "bind(workflow#input.instance-size)"
      recipe-url: "bind(workflow#input.recipe-url)"
    haproxy:
      add-servers: "bind(workflow#actions.add-servers)"
      reconfigure-servers: "bind(workflow#actions.reconfigure-servers)"
      lb-stats: "bind(workflow#result.lb-stats)"

  components:
    workflow:
      type: workflow.Instance
      interfaces:
        input:
          operating-system:
             type: configuration(map<string,object>)
             suggestions:
                 "centos": {image: "us-east-1/ami-bf5021d6", identity: root}
                 "amazon": {image: "us-east-1/ami-1ba18d72", identity: ec2-user}
                 "ubuntu1204": {image: "us-east-1/ami-967edcff", identity: ubuntu}
                 "ubuntu1004": {image: "us-east-1/ami-9f3906f6", identity: ubuntu}
          stats-user:
             type: configuration(string)
             name: Haproxy Statistics page User
          stats-pass:
             type: configuration(string)
             name: Haproxy Statistics page User Password
          stats-port:
             type: configuration(int)
             name: Haproxy Statistics page port
          stats-url:
             type: configuration(string)
             name: Haproxy Statistics page Url
          recipe-url:
             type: configuration(string)
             name: Chef cookbooks Url
          instance-size:
             type: configuration(string)
             name: EC2 instance type
        actions:
          add-servers:
             type: receive-command(list<string> app-hosts, int app-port, string lb-bucket => string entry-url)
             name: Add Servers
          reconfigure-servers:
             type: receive-command(list<string> app-hosts, int app-port, string lb-bucket)
             name: Reconfigure Servers
        result:
          lb-stats:
             type: publish-signal(object)
             name: Haproxy statistics

      configuration:
        configuration.workflows:
          launch:
            steps:
              - provision-vm:
                  action: provisionVms
                  phase: provision
                  parameters:
                    roleName: default
                    hardwareId: "{$.instance-size}"
                    vmIdentity: "{$.operating-system.identity}"
                    imageId: "{$.operating-system.image}"
                  output:
                    lb-host: ips

              - lb-install:
                  action: "chefsolo"
                  precedingPhases: [ provision ]
                  phase: lb-install
                  parameters:
                    roles: [ default ]
                    runList: ["recipe[haproxy]"]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      haproxy:
                        stats_user: "{$.stats-user}"
                        stats_pass: "{$.stats-pass}"
                        stats_port: "{$.stats-port}"
                        stats_url: "{$.stats-url}"
            return:
              lb-stats:
                value:
                  lb-host: "{$.lb-host[0]}"
                  lb-statistics-url: "http://{$.lb-host}:{$.stats-port}{$.stats-url}"
                  stats-user: "{$.stats-user}"
                  stats-pass: "{$.stats-pass}"

          add-servers:
            steps:
              - add-servers:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[haproxy::add_servers]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      haproxy:
                        server: "{$.app-hosts}"
                        port: "{$.app-port}"
                        bucket: "{$.lb-bucket}"
            return:
              entry-url:
                #this url should depend on lb-bucket and generated somewhere inside
                value: "http://{$.lb-stats.lb-host}"

          reconfigure-servers:
            steps:
              - reconfigure-servers:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[haproxy::reconfigure]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      haproxy:
                        server: "{$.app-hosts}"
                        port: "{$.app-port}"
                        bucket: "{$.lb-bucket}"
